local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
	Name = "Type Soul Script | by XxMoonXx",
	LoadingTitle = "Type Soul Script",
	LoadingSubtitle = "by XxMoonXx",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "TypeSoulConfig",
		FileName = "Settings"
	},
	Discord = {
		Enabled = false
	},
	KeySystem = false
})

game:GetService("Players").LocalPlayer.Idled:Connect(function()
	game:GetService("VirtualUser"):Button2Down(Vector2.new())
	task.wait(1)
	game:GetService("VirtualUser"):Button2Up(Vector2.new())
end)

local MainTab = Window:CreateTab("Main", 4483362458)
local LocalTab = Window:CreateTab("Local Player", 6034287594)

local autoM1 = false
local autoSprint = false
local autoParry = false
local flying = false
local flySpeed = 60

MainTab:CreateToggle({
	Name = "Auto M1",
	CurrentValue = false,
	Flag = "AutoM1",
	Callback = function(v) autoM1 = v end
})

MainTab:CreateToggle({
	Name = "Auto Sprint",
	CurrentValue = false,
	Flag = "AutoSprint",
	Callback = function(v) autoSprint = v end
})

MainTab:CreateToggle({
	Name = "Auto Parry",
	CurrentValue = false,
	Flag = "AutoParry",
	Callback = function(v) autoParry = v end
})

local autoMission = false

MainTab:CreateToggle({
	Name = "Auto Mission",
	CurrentValue = false,
	Flag = "AutoMission",
	Callback = function(Value)
		autoMission = Value
	end
})

task.spawn(function()
	while true do
		if autoMission then
			local function getNil(name, class)
				for _, v in next, getnilinstances() do
					if v.ClassName == class and v.Name == name then
						return v
					end
				end
			end
			local remote = getNil("AcceptMission", "RemoteEvent")
			if remote then
				local args = { "Yes" }
				remote:FireServer(unpack(args))
			end
		end
		task.wait(1)
	end
end)

MainTab:CreateButton({
	Name = "Force Respawn",
	Callback = function()
		local char = game.Players.LocalPlayer.Character
		if char then
			char:BreakJoints()
		end
	end
})


MainTab:CreateButton({
	Name = "Remove Player Anims",
	Callback = function()
		local char = game.Players.LocalPlayer.Character
		if char then
			for _,v in pairs(char:GetDescendants()) do
				if v:IsA("Animator") or v:IsA("Animation") then
					v:Destroy()
				end
			end
		end
	end
})

task.spawn(function()
	while true do
		if autoM1 then
			local args = { "LightAttack" }
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ServerCombatHandler"):FireServer(unpack(args))
		end
		if autoSprint then
			local char = game.Players.LocalPlayer.Character
			if char and char:FindFirstChild("CharacterHandler") then
				local args = { "Pressed" }
				char.CharacterHandler:WaitForChild("Remotes"):WaitForChild("Sprint"):FireServer(unpack(args))
			end
		end
		if autoParry then
			local char = game.Players.LocalPlayer.Character
			if char and char:FindFirstChild("CharacterHandler") then
				local args = { "Released" }
				char.CharacterHandler:WaitForChild("Remotes"):WaitForChild("Block"):FireServer(unpack(args))
			end
		end
		task.wait(0.1)
	end
end)

LocalTab:CreateSlider({
	Name = "WalkSpeed",
	Range = {16, 200},
	Increment = 1,
	CurrentValue = 16,
	Callback = function(v)
		local h = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if h then h.WalkSpeed = v end
	end
})

LocalTab:CreateSlider({
	Name = "JumpPower",
	Range = {50, 200},
	Increment = 1,
	CurrentValue = 50,
	Callback = function(v)
		local h = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if h then h.JumpPower = v end
	end
})

LocalTab:CreateButton({
	Name = "Infinite Jump",
	Callback = function()
		game:GetService("UserInputService").JumpRequest:Connect(function()
			local char = game.Players.LocalPlayer.Character
			if char then
				char:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
			end
		end)
	end
})

LocalTab:CreateButton({
	Name = "Reduce Lag (Remove Textures)",
	Callback = function()
		for _,v in pairs(game:GetDescendants()) do
			if v:IsA("Texture") or v:IsA("Decal") then
				v:Destroy()
			end
		end
	end
})

LocalTab:CreateSlider({
	Name = "Fly Speed",
	Range = {20, 200},
	Increment = 5,
	CurrentValue = 60,
	Callback = function(v) flySpeed = v end
})

LocalTab:CreateToggle({
	Name = "Fly Smooth",
	CurrentValue = false,
	Flag = "FlyToggle",
	Callback = function(v)
		flying = v
		local lp = game.Players.LocalPlayer
		local char = lp.Character or lp.CharacterAdded:Wait()
		local hrp = char:WaitForChild("HumanoidRootPart")

		if not flying then
			local old = hrp:FindFirstChild("FlyVelocity")
			if old then old:Destroy() end
			return
		end

		local bv = Instance.new("BodyVelocity")
		bv.MaxForce = Vector3.new(1e9, 1e9, 1e9)
		bv.Velocity = Vector3.zero
		bv.Name = "FlyVelocity"
		bv.Parent = hrp

		local uis = game:GetService("UserInputService")
		local dir = Vector3.zero

		task.spawn(function()
			while flying and bv and bv.Parent do
				local cam = workspace.CurrentCamera
				local d = Vector3.zero
				if uis:IsKeyDown(Enum.KeyCode.W) then d += cam.CFrame.LookVector end
				if uis:IsKeyDown(Enum.KeyCode.S) then d -= cam.CFrame.LookVector end
				if uis:IsKeyDown(Enum.KeyCode.A) then d -= cam.CFrame.RightVector end
				if uis:IsKeyDown(Enum.KeyCode.D) then d += cam.CFrame.RightVector end
				if uis:IsKeyDown(Enum.KeyCode.Space) then d += cam.CFrame.UpVector end
				if uis:IsKeyDown(Enum.KeyCode.LeftControl) then d -= cam.CFrame.UpVector end
				if d.Magnitude > 0 then
					dir = d.Unit
				else
					dir = Vector3.zero
				end
				bv.Velocity = dir * flySpeed
				task.wait()
			end
			if bv then bv:Destroy() end
		end)
	end
})
