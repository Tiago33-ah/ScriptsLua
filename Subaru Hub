-- Simple Player Cheats UI and Feature Script (no Rayfield)

-- Create UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "PlayerCheatsGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game:GetService("Players").LocalPlayer.PlayerGui

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 250, 0, 350)
Frame.Position = UDim2.new(0, 20, 0, 100)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Text = "Player Cheats"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 22
Title.Parent = Frame

-- Helper for UI element layout
local function addLabel(name, y)
    local lbl = Instance.new("TextLabel")
    lbl.Text = name
    lbl.Size = UDim2.new(0.5, -10, 0, 24)
    lbl.Position = UDim2.new(0, 10, 0, y)
    lbl.BackgroundTransparency = 1
    lbl.TextColor3 = Color3.fromRGB(200, 200, 200)
    lbl.Font = Enum.Font.SourceSans
    lbl.TextSize = 18
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Parent = Frame
    return lbl
end

local function addToggle(y, callback)
    local btn = Instance.new("TextButton")
    btn.Text = "OFF"
    btn.Size = UDim2.new(0.4, 0, 0, 24)
    btn.Position = UDim2.new(0.55, 0, 0, y)
    btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 16
    btn.Parent = Frame
    local state = false
    btn.MouseButton1Click:Connect(function()
        state = not state
        btn.Text = state and "ON" or "OFF"
        btn.BackgroundColor3 = state and Color3.fromRGB(0,170,0) or Color3.fromRGB(70,70,70)
        callback(state)
    end)
    return btn
end

local function addSlider(name, min, max, init, y, callback)
    addLabel(name, y)
    local slider = Instance.new("TextButton")
    slider.Size = UDim2.new(0.7, 0, 0, 20)
    slider.Position = UDim2.new(0.25, 0, 0, y)
    slider.BackgroundColor3 = Color3.fromRGB(70, 70, 120)
    slider.TextColor3 = Color3.fromRGB(255,255,255)
    slider.Font = Enum.Font.SourceSans
    slider.TextSize = 14
    slider.Text = tostring(init)
    slider.Parent = Frame
    local value = init
    slider.MouseButton1Click:Connect(function()
        local input = tonumber(game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("PlayerCheatsGui"):FindFirstChild("InputBox") and ScreenGui.InputBox.Text or nil)
        if not input then
            -- Create an input box
            local box = Instance.new("TextBox")
            box.Name = "InputBox"
            box.Size = UDim2.new(0.5, 0, 0, 20)
            box.Position = UDim2.new(0.25, 0, 0, y + 25)
            box.BackgroundColor3 = Color3.fromRGB(50,50,100)
            box.TextColor3 = Color3.fromRGB(255,255,255)
            box.Text = tostring(value)
            box.PlaceholderText = tostring(min).." - "..tostring(max)
            box.Parent = ScreenGui
            box.FocusLost:Connect(function(enter)
                if enter then
                    local num = tonumber(box.Text)
                    if num and num >= min and num <= max then
                        value = num
                        slider.Text = tostring(num)
                        callback(num)
                    end
                    box:Destroy()
                end
            end)
            box:CaptureFocus()
        end
    end)
end

-- Vars
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local flying = false
local bodyVelocity, bodyGyro
local flySpeed = 50
local noclipActive = false
local antiAfkConnection
local godModeConnection

-- Functions
local function startFly()
    if flying then return end
    flying = true
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
    bodyVelocity.Velocity = Vector3.new(0,0,0)
    bodyVelocity.Parent = rootPart
    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(1e5,1e5,1e5)
    bodyGyro.CFrame = rootPart.CFrame
    bodyGyro.Parent = rootPart
    game:GetService("RunService"):BindToRenderStep("Fly", Enum.RenderPriority.Character.Value, function()
        if not flying then
            if bodyVelocity then bodyVelocity:Destroy() bodyVelocity=nil end
            if bodyGyro then bodyGyro:Destroy() bodyGyro=nil end
            game:GetService("RunService"):UnbindFromRenderStep("Fly")
            return
        end
        local camCF = workspace.CurrentCamera.CFrame
        local moveVec = Vector3.new()
        local uis = game:GetService("UserInputService")
        if uis:IsKeyDown(Enum.KeyCode.W) then moveVec = moveVec + camCF.LookVector end
        if uis:IsKeyDown(Enum.KeyCode.S) then moveVec = moveVec - camCF.LookVector end
        if uis:IsKeyDown(Enum.KeyCode.A) then moveVec = moveVec - camCF.RightVector end
        if uis:IsKeyDown(Enum.KeyCode.D) then moveVec = moveVec + camCF.RightVector end
        if uis:IsKeyDown(Enum.KeyCode.Space) then moveVec = moveVec + Vector3.new(0,1,0) end
        if uis:IsKeyDown(Enum.KeyCode.LeftControl) then moveVec = moveVec - Vector3.new(0,1,0) end
        if moveVec.Magnitude > 0 then
            moveVec = moveVec.Unit * flySpeed
        end
        bodyVelocity.Velocity = moveVec
        bodyGyro.CFrame = camCF
    end)
end

local function stopFly()
    flying = false
    if bodyVelocity then bodyVelocity:Destroy() bodyVelocity=nil end
    if bodyGyro then bodyGyro:Destroy() bodyGyro=nil end
    game:GetService("RunService"):UnbindFromRenderStep("Fly")
end

local function setNoClip(enabled)
    noclipActive = enabled
    if enabled then
        game:GetService("RunService"):BindToRenderStep("NoClip", Enum.RenderPriority.Character.Value, function()
            for _, part in ipairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
    else
        game:GetService("RunService"):UnbindFromRenderStep("NoClip")
        for _, part in ipairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

local function setAntiAfk(enabled)
    if enabled then
        if not antiAfkConnection then
            antiAfkConnection = player.Idled:Connect(function()
                local vu = game:GetService("VirtualUser")
                vu:CaptureController()
                vu:ClickButton2(Vector2.new())
            end)
        end
    else
        if antiAfkConnection then
            antiAfkConnection:Disconnect()
            antiAfkConnection = nil
        end
    end
end

local function setGodMode(enabled)
    if enabled then
        humanoid.MaxHealth = math.huge
        humanoid.Health = math.huge
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, false)
        if godModeConnection then godModeConnection:Disconnect() end
        godModeConnection = humanoid.HealthChanged:Connect(function()
            if humanoid.Health < humanoid.MaxHealth then
                humanoid.Health = humanoid.MaxHealth
            end
        end)
    else
        humanoid.MaxHealth = 100
        humanoid.Health = 100
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, true)
        if godModeConnection then
            godModeConnection:Disconnect()
            godModeConnection = nil
        end
    end
end

-- Add controls
addLabel("Fly", 40)
addToggle(40, function(state)
    if state then startFly() else stopFly() end
end)

addLabel("NoClip", 70)
addToggle(70, function(state)
    setNoClip(state)
end)

addLabel("Anti AFK", 100)
addToggle(100, function(state)
    setAntiAfk(state)
end)

addLabel("God Mode", 130)
addToggle(130, function(state)
    setGodMode(state)
end)

addSlider("WalkSpeed", 16, 250, humanoid.WalkSpeed, 170, function(value)
    humanoid.WalkSpeed = value
end)

addSlider("JumpPower", 50, 250, humanoid.JumpPower, 200, function(value)
    humanoid.JumpPower = value
end)

addSlider("Fly Speed", 10, 150, flySpeed, 230, function(value)
    flySpeed = value
end)

-- Handle character respawn
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = char:WaitForChild("Humanoid")
    if noclipActive then setNoClip(true) end
end)

-- Drag UI
local UserInputService = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
